class Solution {
  public:
  long long sum(long long int n){
  long long  int p=n;
  long long  int rev=0;
    while(n>0){
        rev=rev*10+n%10;
        n/=10;
    }
    return p+rev;

}
int ispal(long long int n){
   long long int q=n;
  long long  int r=0;
    while(n>0){
        r=r*10+n%10;
        n/=10;
    }
    if(q==r){
        return 1;
    }
    else{
        return 0;
    }
}
    long long isSumPalindrome(long long n){
        long long a1=ispal(n);
        if(a1==1)
         return n;
        else{ 
        long long a=sum(n);
        long long x=ispal(a);
        if(x==1)
         return a;
        else{
            long long b=sum(a);
            long long y=ispal(b);
            if(y==1)
             return b;
            else{
                 long long c=sum(b);
                 long long z=ispal(c);
                 if(z==1)
                  return c;
                 else{
                     long long d=sum(c);
                     long long z1=ispal(d);
                     if(z1==1)
                      return d;
                     else{
                         long long e=sum(d);
                         long long z2=ispal(e);
                         if(z2==1)
                          return e;
                         else{
                             return -1;
                         } 
                     } 
                 } 
            } 
        } 
    }
    }
